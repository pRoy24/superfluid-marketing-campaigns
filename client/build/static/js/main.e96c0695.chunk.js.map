{"version":3,"sources":["components/marketer/MarketerHomeContainer.js","components/Landing.js","components/marketer/ActiveCampaigns.js","components/marketer/JoinCampaign.js","components/marketer/MyCampaigns.js","components/marketer/MarketerHome.js","components/publisher/NewCampaign.js","components/publisher/PublisherCampaigns.js","components/publisher/CampaignHome.js","components/publisher/PublisherHome.js","components/common/AddressDisplay.js","components/nav/TopNavBar.js","components/nav/TopNavBarContainer.js","components/publisher/PublisherHomeContainer.js","components/home/AppHome.js","components/home/AppHomeContainer.js","components/nav/BottomNavBar.js","App.js","serviceWorker.js","index.js","reducers/user.js","reducers/publisher.js","reducers/campaign.js","reducers/index.js","store/configureStore.dev.js","actions/publisher.js","actions/campaign.js","actions/user.js","images/w903.png","store/configureStore.js","logo.svg"],"names":["daix","Landing","redirectToHome","props","history","push","className","Container","Row","Col","lg","src","water","Button","onClick","this","Component","withRouter","ActiveCampaigns","campaignList","campaign","campignsList","length","map","item","idx","ListGroupItem","to","_id","publisherWalletAddress","marketLink","retweetPayout","likePayout","commentPayout","payoutInterval","payoutIntervalUnit","ListGroup","JoinCampaign","submitProfile","payload","state","campaignLink","user","selectedAddress","match","params","id","submitJoinCampaign","campaignLinkChanged","evt","setState","target","value","approvePublisher","currentCampaign","approveSubscription","currentView","fetchCurrentCampaign","nextProps","joinCampaignSubmitting","approvalPending","replace","Form","Control","type","onChange","MyCampaigns","fetchOpenCampaigns","web3","window","campaignsFilteredList","filter","fIdx","marketers","find","fItem","utils","toChecksumAddress","userAddress","console","log","myMarketItem","l","previous_payout","MarketerHome","exact","path","NewCampaign","createCampaignWallet","generateTestDai","currentAccount","publisher","generateFunds","newAccountAdding","generatingFunds","campaignDetailsSubmitting","view","href","CampaignDetails","marketLinkChanged","likePayoutChanged","retweetPayoutChanged","commentPayoutChanged","submitPublisherRequest","preventDefault","publisherUserAddress","submitCampaignDetails","onSubmit","Group","controlId","InputGroup","FormControl","placeholder","Append","Text","payoutIntervalChanged","Dropdown","Toggle","Menu","Item","PublisherCampaigns","authenticateUser","address","profile","undefined","campaignItems","publisherAccounts","CampaignHome","getAccountFlow","currentPublisher","accountFlow","flow","PublisherHome","setupPublisher","span","offset","md","AddressDisplay","addressDisplay","substring","TopNavbar","selectedNetwork","addressString","networkString","wrongNetworkDisplay","Navbar","expand","fixed","Brand","aria-controls","Collapse","Nav","Link","connect","dispatch","TopNavBar","createPublisherIndex","then","response","createPublisherIndexSuccess","data","catch","err","createPublisherIndexFailure","createCampaignWalletSuccess","createCampaignWalletFailure","generateFundsSuccess","generateFundsFailure","getAccountFlowSuccess","getAccountFlowFailure","submitCampaignDetailsSuccess","submitCampaignDetailsFailure","authenticateUserSuccess","authenticateUserFailure","sf","require","Framework","version","web3Provider","currentProvider","chainId","fetchOpenCampaignsSuccess","fetchOpenCampaignsFailure","fetchCurrentCampaignSuccess","fetchCurrentCampaignFailure","marketer","initialize","resolver","get","daiAddress","contracts","TestToken","at","dai","getERC20Wrapper","daixWrapper","ISuperToken","wrapperAddress","daixResponse","host","callAgreement","agreements","ida","contract","methods","encodeABI","from","approvalResponse","approvalSuccess","submitJoinCampaignSuccess","submitJoinCampaignFailure","AppHome","ethEnabled","ethereum","Web3","enable","self","networkVersion","setUserAccount","on","accounts","networkId","fluid","TopNavBarContainer","MarketerHomeContainer","PublisherHomeContainer","BottomNavBar","App","AppHomeContainer","Boolean","location","hostname","store","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","initialState","rootReducer","combineReducers","action","SET_USER_ACCOUNT","network","AUTHENTICATE_USER_SUCCESS","currentPublisherInState","CREATE_CAMPAIGN_WALLET","CREATE_CAMPAIGN_WALLET_SUCCESS","newAccount","account","currentAccounts","CREATE_CAMPAIGN_WALLET_FAILURE","GENERATE_FUNDS","GENERATE_FUNDS_SUCCESS","GENERATE_FUNDS_FAILURE","GET_ACCOUNT_FLOW","SUBMIT_CAMPAIGN_DETAILS","SUBMIT_CAMPAIGN_DETAILS_SUCCESS","FETCH_OPEN_CAMPAIGNS","FETCH_OPEN_CAMPAIGNS_SUCCESS","campaigns","FETCH_OPEN_CAMPAIGNS_FAILURE","FETCH_CURRENT_CAMPAIGN","FETCH_CURRENT_CAMPAIGN_SUCCESS","FETCH_CURRENT_CAMPAIGN_FAILURE","SUBMIT_JOIN_CAMPAIGN","SUBMIT_JOIN_CAMPAIGN_SUCCESS","SUBMIT_JOIN_CAMPAIGN_FAILURE","APPROVAL_PENDING","APPROVAL_SUCCESS","compose","applyMiddleware","promise","devToolsExtension","f","createStore","finalCreateStore","index","API_SERVER","process","request","axios","post","module","exports"],"mappings":"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","file":"static/js/main.e96c0695.chunk.js","sourcesContent":["import {connect} from 'react-redux';\nimport MarketerHome from './MarketerHome';\nimport {setUserAccount, authenticateUser, authenticateUserSuccess, authenticateUserFailure} from '../../actions/user';\nimport {fetchOpenCampaigns, fetchOpenCampaignsSuccess, fetchOpenCampaignsFailure, fetchCurrentCampaign, \n  fetchCurrentCampaignSuccess, fetchCurrentCampaignFailure, submitJoinCampaign, submitJoinCampaignSuccess, submitJoinCampaignFailure,\n  approvalSuccess, approvalPending\n} from '../../actions/campaign';\nconst web3 = window.web3;\nconst SuperfluidSDK = require(\"@superfluid-finance/ethereum-contracts\");\nconst sf = new SuperfluidSDK.Framework({version: \"preview-20200928\", web3Provider: web3.currentProvider, chainId: 5 });\nlet daix;\n\n    \n\nconst mapStateToProps = state => {\n  return {\n     user: state.user,\n     campaign: state.campaign\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchOpenCampaigns: () => {\n      dispatch(fetchOpenCampaigns()).then(function(response){\n        dispatch(fetchOpenCampaignsSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(fetchOpenCampaignsFailure(err));\n      })\n    },\n    \n    fetchCurrentCampaign: (id) => {\n      dispatch(fetchCurrentCampaign(id)).then(function(response){\n        dispatch(fetchCurrentCampaignSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(fetchCurrentCampaignFailure(err));\n      })\n    },\n    \n    approveSubscription: (publisher, marketer) => {\n    dispatch(approvalPending());\n    \n\n    \nsf.initialize().then(function(response){\n  sf.resolver.get(\"tokens.fDAI\").then(function(daiAddress){\n    sf.contracts.TestToken.at(daiAddress).then(function(dai){\n      sf.getERC20Wrapper(dai).then(function(daixWrapper){\n        sf.contracts.ISuperToken.at(daixWrapper.wrapperAddress).then(function(daixResponse){\n          daix = daixResponse;\n    sf.host.callAgreement(sf.agreements.ida.address, sf.agreements.ida.contract.methods.approveSubscription(daix.address, publisher, 42, \"0x\").encodeABI(), { from: marketer })\n    .then(function(approvalResponse){\n      dispatch(approvalSuccess());\n    })\n        });\n      });\n    });\n  });\n});    \n    },\n    \n    submitJoinCampaign: (payload) => {\n      dispatch(submitJoinCampaign(payload)).then(function(response){\n        dispatch(submitJoinCampaignSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(submitJoinCampaignFailure(err));\n      })\n    }\n    \n\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MarketerHome);","import React, {Component} from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport './landing.scss';\nimport water from '../images/w903.png';\nimport {Link, withRouter} from 'react-router-dom';\n\n\nclass Landing extends Component {\n  redirectToHome = () => {\n    const {history} = this.props;\n    history.push('/app/campaign');\n  }\n  \n  render() {\n    return (\n      <div  className=\"landing-page-container\">\n      <Container>\n        <div className=\"app-landing-text-container\">\n          <div className=\"h4 app-heading\">Superfluid marketing campaigns</div>\n          <Row>\n          <Col lg={4}>\n            <img src={water} className=\"landing-page-image\"/>\n          </Col>\n          <Col lg={8}>\n          <div>\n            <div className=\"landing-line\">\n              Get better social engagement and metrics.\n            </div>\n            <div className=\"landing-line\">\n              Engamanent is real-time, so should your payments be.              \n            </div>\n            <div className=\"landing-line\">\n              Pay out your influencers and marketers in real-time based on engagement.\n            </div>\n\n            <div>\n              <Button onClick={this.redirectToHome} className=\"primary-btn landing-btn\">\n                 Go to App\n              </Button>\n            </div>\n          </div>\n          </Col>\n          </Row>\n        </div>\n      </Container>\n      </div>\n      )\n  }\n}\n\nexport default withRouter(Landing);","import React, {Component} from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport {Row, Col, ListGroup, ListGroupItem} from 'react-bootstrap';\n\nclass ActiveCampaigns extends Component {\n\n  render() {\n    const {campaign: {campaignList}} = this.props;\n    let campignsList = <span/>;\n    if (campaignList && campaignList.length > 0) {\n      campignsList = campaignList.map(function(item, idx){\n        return <ListGroupItem className=\"list-group-item-menu\">\n          <Link to={`/app/campaign/${item._id}`}>\n          <Row>\n            <Col lg={6}>\n             Posted by {item.publisherWalletAddress}\n            </Col>\n            <Col lg={6}>\n              Link to promote {item.marketLink}\n            </Col>\n          </Row>\n          <div>Engagement Payouts</div>\n          <Row>\n          <Col lg={3}>{item.retweetPayout} xDai per Retweet</Col>\n          <Col lg={3}>{item.likePayout} xDai per Like</Col>\n          <Col lg={3}>{item.commentPayout} xDai per Comment</Col>\n          </Row>\n          <Row>\n            <Col lg={12}>\n            Payout interval {item.payoutInterval} {item.payoutIntervalUnit}\n            </Col>\n          </Row>\n            </Link>\n        </ListGroupItem>\n      })\n    }\n    return (\n      <div>\n\n        <ListGroup className=\"app-list-group\">\n          {campignsList}\n        </ListGroup>      \n      </div>\n      )\n  }\n}\n\nexport default withRouter(ActiveCampaigns)","import React, {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {Form, Button, Row, Col} from 'react-bootstrap';\n\nclass JoinCampaign extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      campaignLink: '',\n      currentView: 'submit'\n    }\n  }\n  componentWillMount() {\n    const {match: {params}} = this.props;\n    this.props.fetchCurrentCampaign(params.id);\n  }\n  \n  submitProfile = () => {\n    const {campaignLink} = this.state;\n    const { user: {selectedAddress}, } = this.props;\n    const {match: {params}} = this.props;\n    const payload = {'campaignLink': campaignLink, 'userAddress': selectedAddress, '_id': params.id};\n    this.props.submitJoinCampaign(payload)\n  }\n  \n  campaignLinkChanged = (evt) => {\n    this.setState({'campaignLink': evt.target.value});\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    const {history} = this.props;\n    const {campaign: {joinCampaignSubmitting, approvalPending}} = nextProps;\n    if (this.props.campaign.joinCampaignSubmitting && !joinCampaignSubmitting) {\n      this.setState({'currentView': 'approve'});\n    }\n    if (this.props.campaign.approvalPending && !approvalPending) {\n      history.replace('/app/campaign/my_campaigns');\n    }\n  }\n  \n  approvePublisher = () => {\n    const {campaign: {currentCampaign}, user: {selectedAddress}} = this.props;\n    \n    this.props.approveSubscription(currentCampaign.publisherWalletAddress, selectedAddress);\n  }\n  \n  render() {\n    const {campaign: {currentCampaign}, user: {selectedAddress}} = this.props;\n    const {campaignLink, currentView} = this.state;\n    if (currentView === 'submit') {\n    return (\n      <div className=\"join-campaign-container\">\n        <div className=\"text-center h4\">Join Campaign</div>\n        <Row>\n        <Col lg={4}>\n        <div>Quote tweet or retweet the following tweet</div>\n        </Col>\n        <Col lg={6}>\n        <div>{currentCampaign.marketLink}</div>\n        </Col>\n        </Row>\n        <Row>\n        <Col lg={4}>\n        <div>Post retweet link here</div>\n        </Col>\n        <Col lg={6}>\n        <Form.Control type=\"text\" value={campaignLink} onChange={this.campaignLinkChanged}/>\n        </Col>\n        </Row>\n        <div>Payout will be made every {currentCampaign.payoutInterval} {currentCampaign.payoutIntervalUnit} to the address\n         {selectedAddress}</div>\n        <div>You need to approve in the next step</div>\n        <div className=\"text-center\">\n        <Button onClick={this.submitProfile} >Submit</Button>\n        </div>\n      </div>\n      )\n   } else{\n      return (\n        <div>\n          <div>Approve the publisher to automatically receive your xDai payouts.</div>\n          <div><Button onClick={this.approvePublisher}>Approve</Button></div>\n        </div>\n        )  \n    }\n}\n}\n\nexport default withRouter(JoinCampaign);","import React, {Component} from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport {Row, Col, ListGroup, ListGroupItem} from 'react-bootstrap';\n\nexport default class MyCampaigns extends Component {\n  componentWillMount() {\n    this.props.fetchOpenCampaigns();\n  }\n  render() {\n    const {campaign: {campaignList}, user: {selectedAddress}} = this.props;\n\n    const web3 = window.web3;\n    let campaignsFilteredList = <span/>;\n    const self = this;\n    if (campaignList && campaignList.length > 0) {\n       campaignsFilteredList = campaignList.filter(function(item, fIdx){\n        let marketerFound = item.marketers.find(function(fItem, fIdx){\n          return web3.utils.toChecksumAddress(fItem.userAddress) === web3.utils.toChecksumAddress(selectedAddress);\n        });\n\n        if (marketerFound) {\n          return item;\n        }\n      }).map(function(item, idx){\n        console.log(item);\n        const myMarketItem = item.marketers.find(function(fItem, fIdx){\n          return web3.utils.toChecksumAddress(fItem.userAddress) === web3.utils.toChecksumAddress(selectedAddress);\n        });\n        return <ListGroupItem className=\"list-group-item-menu\">\n          <Link to={`/app/campaign/${item._id}`}>\n          <Row>\n            <Col lg={4}>\n              Publication link \n            </Col>\n            <Col lg={8}>\n            {item.marketLink}\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4}>\n              My marketing link \n            </Col>\n            <Col lg={8}>\n              {myMarketItem.campaignLink}\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4}>\n              My total payouts\n            </Col>\n            <Col l={8}>\n              {myMarketItem.previous_payout} xDai\n            </Col>\n          </Row>\n          \n          <div>{item.marketLink}</div>\n          <div>Engagement Payouts</div>\n          <Row>\n          <Col lg={3}>{item.retweetPayout} per Retweet</Col>\n          <Col lg={3}>{item.likePayout} per Like</Col>\n          <Col lg={3}>{item.commentPayout} per Comment</Col>\n        \n          </Row>\n            </Link>\n        </ListGroupItem>\n      })\n    }\n    return (\n      <div>\n        <div className=\"text-center h4\">\n          My Campaigns\n        </div>\n        <ListGroup className=\"app-list-group\">\n          {campaignsFilteredList}\n        </ListGroup>      \n      </div>\n      )\n  }\n}","import React, {Component} from 'react';\nimport {Form, ListGroup, ListGroupItem, Row, Col, Container} from 'react-bootstrap';\nimport {Link, Switch, Router, Route} from 'react-router-dom';\nimport ActiveCampaigns from './ActiveCampaigns';\nimport JoinCampaign from './JoinCampaign';\nimport MyCampaigns from './MyCampaigns';\nimport './marketer.scss';\n\nexport default class MarketerHome extends Component {\n  componentWillMount() {\n    this.props.fetchOpenCampaigns();\n  }\n  render() {\n    return (\n      <Container>\n        <Row className=\"tab-header\">\n          <Col lg={2}>\n            <Link to=\"/app/campaign\">Open Campaigns</Link>\n          </Col>\n          <Col lg={3}>\n            <Link to=\"/app/campaign/my_campaigns\">My current campaigns</Link>\n          </Col>\n        </Row>\n        <Switch>\n          <Route exact path=\"/app/campaign\">\n            <ActiveCampaigns {...this.props}/>\n          </Route>\n          <Route exact path=\"/app/campaign/my_campaigns\">\n            <MyCampaigns {...this.props}/>\n          </Route> \n          <Route path=\"/app/campaign/:id\">\n            <JoinCampaign {...this.props}/>\n          </Route>\n\n        </Switch>\n      </Container>\n      )\n  }\n}","import React, {Component} from 'react';\nimport {Form, FormControl, InputGroup, Button, Dropdown} from 'react-bootstrap';\nimport {Row, Col} from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\n\nclass NewCampaign extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'view': '',\n\n    }\n  }\n  componentWillMount() {\n    this.setState({'view': 'createAccount'});\n  }\n  createCampaignWallet = () => {\n    const {user} = this.props;\n    this.props.createCampaignWallet({'address': user.selectedAddress});\n  }\n  \n  generateTestDai = () => {\n    const {publisher: {currentAccount}, user: {selectedAddress}} = this.props;\n    const payload = {'userWallet': selectedAddress, 'publisherWallet': currentAccount};\n    this.props.generateFunds(payload);\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    const {publisher: {currentAccount, newAccountAdding, generatingFunds, campaignDetailsSubmitting}} = nextProps;\n    const {history} = this.props;\n    \n    if (this.props.publisher.campaignDetailsSubmitting && !campaignDetailsSubmitting) {\n      history.replace('/app/publisher/list_active');\n    }\n\n    if (this.props.publisher.newAccountAdding && !newAccountAdding) {\n      \n      this.setState({'view': 'fundAccount'});\n    }\n    if (this.props.publisher.generatingFunds && !generatingFunds) {\n      this.setState({'view': 'createCampaign'});\n    }\n  }\n  \n  render() {\n    const {view} = this.state;\n    const {publisher} = this.props;\n\n    if (view === 'createAccount') {\n    return (\n      <div>\n        <div>\n          <div>A new campaign publication allows you to specify a link that others can promote on Twitter.</div>\n          <div>You can specify the payout rewards for engagement metrics on the Tweet</div>\n          <div>The payouts will be made seamlessly according to the specified payout parameters and interval using SuperFluid finance.</div>\n        </div>\n        <div>\n          <div>Ready to begin?</div>\n          <Button onClick={this.createCampaignWallet}>Create campaign wallet.</Button>\n          <div>Once created you need to fund the wallet with some Testnet Ether to process transaction fees.</div>\n        </div>\n      </div>\n      )\n  } else if (view === 'fundAccount') {\n    return (\n      <div>\n        <div>Your publication wallet address is {publisher.currentAccount ? publisher.currentAccount : ''}</div>\n        <div>Fund this account with Test ether <a href=\"https://goerli-faucet.slock.it/\" target=\"_blank\">here</a></div>\n        <div>(Please wait until the transaction is confirmed before proceeding)</div>\n        <div>Now let's fund your campaign.</div>\n        <Button onClick={this.generateTestDai}>Generate xDai</Button>\n      </div>\n      )\n  } else if (view === 'createCampaign') {\n    return <CampaignDetails {...this.props}/>\n  }\n  } \n}\n\nclass CampaignDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'marketLink': '',\n      'payoutInterval': '1',\n      'payoutIntervalUnit': 'minutes',\n      'likePayout': '',\n      'retweetPayout': '',\n      'commentPayout': ''\n    }\n  }\n  marketLinkChanged = (evt) => {\n    this.setState({'marketLink': evt.target.value});\n  }\n  likePayoutChanged = (evt) => {\n    this.setState({'likePayout': evt.target.value});\n  }\n  retweetPayoutChanged = (evt) => {\n    this.setState({'retweetPayout': evt.target.value});\n  }\n  commentPayoutChanged = (evt) => {\n    this.setState({'commentPayout': evt.target.value});\n  }\n  \n  submitPublisherRequest = (evt) => {\n    const {publisher: {currentAccount}, user: {selectedAddress}} = this.props;\n    const {match: {params}} = this.props;\n    evt.preventDefault();\n    let payload = this.state;\n    payload.publisherWalletAddress = currentAccount;\n    payload.publisherUserAddress = selectedAddress;\n    \n    this.props.submitCampaignDetails(payload);\n    \n    \n  }\n  render() {\n    const {marketLink,payoutInterval, payoutIntervalUnit, likePayout, retweetPayout, commentPayout} = this.state;\n    return (\n      <div>\n        <Form onSubmit={this.submitPublisherRequest}>\n\n         <Form.Group controlId=\"formBasicEmail\">\n           Add the link of the tweet which you want to promote\n           <Form.Control type=\"text\" value={marketLink} onChange={this.marketLinkChanged}/>\n         </Form.Group>\n         <div>Payout for engagement metrics</div>\n         <Row>\n\n           <Col lg={4}>\n             <div>\n               For every like\n        <InputGroup className=\"mb-2\">\n          <FormControl id=\"inlineFormInputGroup\" placeholder=\"Like payout\" value={likePayout} onChange={this.likePayoutChanged}/>\n          <InputGroup.Append>\n            <InputGroup.Text>xDAI</InputGroup.Text>\n          </InputGroup.Append>\n        </InputGroup>               \n             </div>\n           </Col>\n           <Col lg={4}>\n             <div>\n               For every retweet\n        <InputGroup className=\"mb-2\">\n          <FormControl id=\"inlineFormInputGroup\" placeholder=\"Retweet payout\" value={retweetPayout} onChange={this.retweetPayoutChanged}/>\n          <InputGroup.Append>\n            <InputGroup.Text>xDAI</InputGroup.Text>\n          </InputGroup.Append>\n        </InputGroup>                    \n             </div>\n           </Col>\n           <Col lg={4}>\n             <div>\n               For every comment\n              <InputGroup className=\"mb-2\">\n                <FormControl id=\"inlineFormInputGroup\" placeholder=\"Comment payout\" value={commentPayout} onChange={this.commentPayoutChanged}/>\n                <InputGroup.Append>\n                  <InputGroup.Text>xDAI</InputGroup.Text>\n                </InputGroup.Append>\n              </InputGroup>                    \n             </div>\n           </Col>\n         </Row> \n         <Row>\n           <Col lg={12}>\n             Payout interval\n             <Row>\n             <Col lg={6}>\n             <FormControl type=\"text\" value={payoutInterval} onChange={this.payoutIntervalChanged}/>\n             </Col>\n             <Col lg={6}>\n             <Dropdown>\n                <Dropdown.Toggle  id=\"dropdown-basic\">\n                  {payoutIntervalUnit}\n                </Dropdown.Toggle>\n              \n                <Dropdown.Menu>\n                  <Dropdown.Item href=\"#/action-1\">Hours</Dropdown.Item>\n                  <Dropdown.Item href=\"#/action-2\">Days</Dropdown.Item>\n                  <Dropdown.Item href=\"#/action-3\">Months</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n             </Col>\n             </Row>\n             </Col>\n           \n         </Row>\n\n         <Button type=\"submit\">\n           Publish\n         </Button>\n        </Form>        \n      </div>\n      )\n  }\n}\n\n\nexport default withRouter(NewCampaign);","import React, {Component} from 'react';\nimport {ListGroup, ListGroupItem} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\n\nexport default class PublisherCampaigns extends Component {\n  componentWillMount() {\n    console.log(this.props);\n    const {user: {selectedAddress}} = this.props;\n    this.props.authenticateUser({address: selectedAddress});\n    \n  }\n  render() {\n    const {user: {profile}} = this.props;\n    if (profile == undefined) {\n      return <span/>;\n    } \n    let campaignItems = <span/>;\n    if (profile.publisherAccounts && profile.publisherAccounts.length > 0) {\n      campaignItems = <ListGroup>\n      {profile.publisherAccounts.map(function(item, idx){\n        return <ListGroupItem>\n        <Link to={`/app/publisher/campaign/${item}`}>{item}</Link>\n        </ListGroupItem>\n      })}\n      </ListGroup>\n    }\n    return (\n      <div>\n        {campaignItems}\n      </div>\n      )\n  }\n}","import React, {Component} from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass CampaignHome extends Component {\n  componentWillMount() {\n    const {match: {params}} = this.props;\n    \n    this.props.getAccountFlow(params.id);\n  }\n  render() {\n    const {match: {params}, publisher: {currentPublisher}} = this.props;\n    console.log(this.props)\n    \n    return (\n      <div>\n        <div className=\"h3\">Campaign</div>\n        <div>\n          Campaign Wallet {params.id}\n          \n        </div>\n        <div>\n          Current net outflow {currentPublisher.accountFlow? currentPublisher.accountFlow.flow: ''}\n        </div>\n      </div>\n      )\n  }\n}\n\nexport default withRouter(CampaignHome);","import React, {Component} from 'react';\nimport {Form, FormControl, InputGroup, Button} from 'react-bootstrap';\nimport {Row, Col} from 'react-bootstrap';\nimport './publisher.scss';\nimport {Link} from 'react-router-dom';\nimport {Switch, Route} from 'react-router-dom';\nimport NewCampaign from './NewCampaign';\nimport PublisherCampaigns from './PublisherCampaigns';\nimport CampaignHome from './CampaignHome';\n\nexport default class PublisherHome extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {marketLink: ''};\n  }\n  submitPublisherRequest = (evt) => {\n    evt.preventDefault();\n    this.props.setupPublisher();\n  }  \n  marketLinkChanged = (evt) => {\n    this.setState({marketLink: evt.target.value});\n  }\n  render() {\n    const {marketLink} = this.state;\n\n    return (\n      <div className=\"\">\n       <Row className=\"tab-header\">\n         <Col lg={2}>\n           <Link to=\"/app/publisher/list_active\">Active Publications</Link>\n         </Col>\n \n         <Col lg={{span: 2, offset: 8}}>\n           <Link to=\"/app/publisher/create\">New Publication</Link>\n         </Col>\n       </Row>\n       <Row>\n        <Col md={{ span: 8, offset: 2 }}>\n        <Switch>\n          <Route exact path=\"/app/publisher\">\n            <NewCampaign {...this.props}/>\n          </Route>\n          <Route path=\"/app/publisher/create\">\n            <NewCampaign {...this.props}/>\n          </Route>\n          <Route path=\"/app/publisher/list_active\">\n            <PublisherCampaigns {...this.props}/>\n          </Route>\n          <Route path=\"/app/publisher/list_new\">\n            <NewCampaign {...this.props}/>\n          </Route>\n          <Route path=\"/app/publisher/list_expired\">\n            <NewCampaign {...this.props}/>\n          </Route>\n          <Route path=\"/app/publisher/campaign/:id\">\n            <CampaignHome {...this.props}/>\n          </Route>\n        </Switch>\n        </Col>  \n      </Row>  \n      </div>\n      )\n  }\n}","import React, {Component} from 'react';\n\nexport default class AddressDisplay extends Component {\n  render() {\n    const {address} = this.props;\n    let addressDisplay= <span/>\n    if (address && address.length > 0) {\n      addressDisplay = <div className=\"small-text\">{address.substring(0, 10)}...</div>\n    }\n    return (\n      <div>\n        {addressDisplay}\n      </div>\n      )\n  }\n}","import React, {Component} from 'react';\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\nimport './nav.scss';\nimport AddressDisplay from '../common/AddressDisplay';\n\nexport default class TopNavbar extends Component {\n  render() {\n    const {user: {selectedAddress, selectedNetwork}} = this.props;\n    let addressString = <span/>;\n    let networkString = <span/>;\n    let wrongNetworkDisplay = <span/>;\n    if (selectedNetwork && selectedNetwork !== '5') {\n      wrongNetworkDisplay = <div>You are in the wrong network. Please switch to Goerli testnet.</div>\n    }\n    if (selectedNetwork === '5') {\n        networkString = <div>Goerli Network</div>\n    }\n    if (selectedAddress) {\n      addressString = <div><AddressDisplay address={selectedAddress}/></div>\n    }\n    \n    return (\n      <div>\n      <Navbar expand=\"lg\" fixed=\"top\">\n        <Navbar.Brand href=\"/\">SuperFluid Marketing Campaigns</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/app/campaign\">Campaigns</Nav.Link>    \n            <Nav.Link href=\"/app/publisher\">Publisher</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n        <div>\n         {wrongNetworkDisplay}\n         {networkString}\n         {addressString}\n        </div>\n      </Navbar>\n      </div>\n      )\n  }\n}","import {connect} from 'react-redux';\nimport TopNavBar from './TopNavBar';\n\n\nconst mapStateToProps = state => {\n  return {\n     user: state.user,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(TopNavBar);","//const SuperfluidSDK = require(\"@superfluid-finance/ethereum-contracts\");\nimport {createPublisherIndex, createPublisherIndexSuccess, createPublisherIndexFailure,\n  createCampaignWallet, createCampaignWalletSuccess, createCampaignWalletFailure,\n  generateFunds, generateFundsSuccess, generateFundsFailure, getAccountFlow, getAccountFlowSuccess, getAccountFlowFailure,\n  submitCampaignDetails, submitCampaignDetailsSuccess, submitCampaignDetailsFailure\n} from '../../actions/publisher';\nimport {setUserAccount, authenticateUser, authenticateUserSuccess, authenticateUserFailure} from '../../actions/user';\n\nimport {connect} from 'react-redux';\nimport PublisherHome from './PublisherHome';\n\n\nconst mapStateToProps = state => {\n  return {\n     user: state.user,\n     publisher: state.publisher\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setupPublisher: function(payload) {\n      dispatch(createPublisherIndex(payload)).then(function(response){\n        dispatch(createPublisherIndexSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(createPublisherIndexFailure(err));\n      })\n    },\n    createCampaignWallet: function(payload) {\n      dispatch(createCampaignWallet(payload)).then(function(response){\n        dispatch(createCampaignWalletSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(createCampaignWalletFailure(err));\n      })\n    },\n    generateFunds: function(payload) {\n      dispatch(generateFunds(payload)).then(function(response){\n        dispatch(generateFundsSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(generateFundsFailure(err));\n      })\n    },\n    getAccountFlow: function(id) {\n      dispatch(getAccountFlow(id)).then(function(response){\n        dispatch(getAccountFlowSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(getAccountFlowFailure(err));\n      })\n    },\n    submitCampaignDetails: function(payload) {\n      dispatch(submitCampaignDetails(payload)).then(function(response){\n        dispatch(submitCampaignDetailsSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(submitCampaignDetailsFailure(err));\n      })\n    },\n    authenticateUser: (payload) => {\n      dispatch(authenticateUser(payload)).then(function(response){\n        dispatch(authenticateUserSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(authenticateUserFailure(err));\n      })\n    }    \n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PublisherHome);\n","import React, {Component} from 'react';\nimport TopNavBarContainer from '../nav/TopNavBarContainer';\nimport {Container} from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport PublisherHomeContainer from '../publisher/PublisherHomeContainer';\nimport MarketerHomeContainer from '../marketer/MarketerHomeContainer';\nimport './apphome.scss';\nimport Web3 from 'web3';\n\nexport default class AppHome extends Component {\n\n  componentWillMount() {\n    this.ethEnabled();\n    const self = this;\n\n    if (window.web3) {\n      const web3 = window.web3;\n\n      const selectedAddress = web3.currentProvider.selectedAddress;\n      const networkVersion = web3.currentProvider.networkVersion;\n      const payload = {'address': selectedAddress,\n        'network': networkVersion\n      }\n      self.props.setUserAccount(payload);  \n            self.props.authenticateUser(payload);\n    }\n    \n    window.ethereum.on('accountsChanged', function (accounts) {\n\n      const web3 = window.web3;\n\n      const selectedAddress = web3.currentProvider.selectedAddress;\n      const networkVersion = web3.currentProvider.networkVersion;\n      const payload = {'address': selectedAddress,\n        'network': networkVersion\n      }\n      self.props.setUserAccount(payload);\n      self.props.authenticateUser(payload);\n    });\n    \n    window.ethereum.on('networkChanged', function (networkId) {\n      // Time to reload your interface with the new networkId\n          const web3 = window.web3;\n    \n          const selectedAddress = web3.currentProvider.selectedAddress;\n          const networkVersion = web3.currentProvider.networkVersion;\n          \n          const payload = {\n            'address': selectedAddress,\n            'network': networkVersion\n          };\n          self.props.setUserAccount(payload);\n      self.props.authenticateUser(payload);            \n    });\n  }\n  \n  ethEnabled = () => {\n  if (window.ethereum) {\n    window.web3 = new Web3(window.ethereum);\n    window.ethereum.enable();\n    return true;\n  }\n  return false;\n}\n\n  componentWillReceiveProps(nextProps) {\n    const {user: {selectedAddress}} = nextProps;\n    const web3 = window.web3;\n    const self = this;\n    if (this.props.user.selectedAddress !== selectedAddress && selectedAddress) {\n\n          const networkVersion = web3.currentProvider.networkVersion;      \n          const payload = {\n            'address': selectedAddress,\n            'network': networkVersion\n          };\n          self.props.setUserAccount(payload);      \n    }\n  }\n  \n  render() {\n\n    return (\n      <Container fluid className=\"app-home-container\">\n        <TopNavBarContainer/>\n        <Container className=\"app-content-container\">\n        <Switch>\n          <Route path=\"/app/campaign\">\n            <MarketerHomeContainer/>\n          </Route>\n          <Route path=\"/app/publisher\">\n            <PublisherHomeContainer/>\n          </Route>\n        </Switch>\n        </Container>\n      </Container>\n      )\n  }\n}","import {connect} from 'react-redux';\nimport AppHome from './AppHome';\nimport {setUserAccount, authenticateUser, authenticateUserSuccess, authenticateUserFailure} from '../../actions/user';\n\nconst mapStateToProps = state => {\n  return {\n     user: state.user,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUserAccount: (payload) => {\n      dispatch(setUserAccount(payload));\n    },\n    authenticateUser: (payload) => {\n      dispatch(authenticateUser(payload)).then(function(response){\n        dispatch(authenticateUserSuccess(response.payload.data));\n      }).catch(function(err){\n        dispatch(authenticateUserFailure(err));\n      })\n    }\n  }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AppHome);","import React, {Component} from 'react';\nimport {Navbar} from 'react-bootstrap';\n\nexport default class BottomNavBar extends Component {\n  render() {\n    return (\n      <Navbar fixed=\"bottom\">\n        Powered by Superfluid\n      </Navbar>\n      )\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Landing from './components/Landing';\nimport MarketerHome from './components/marketer/MarketerHome';\nimport PublisherHome from './components/publisher/PublisherHome';\nimport AppHomeContainer from './components/home/AppHomeContainer';\nimport BottomNavBar from './components/nav/BottomNavBar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n     <Router>\n      <div className=\"App\">\n          <Switch>\n          <Route exact path=\"/\">\n            <Landing />\n          </Route>\n          <Route path=\"/app\">\n            <AppHomeContainer/>\n          </Route>\n          </Switch>\n      </div>\n      <BottomNavBar/>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore.js';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n\n    <App />\n\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {SET_USER_ACCOUNT, AUTHENTICATE_USER_SUCCESS} from '../actions/user';\n\nconst initialState = {\n  selectedAddress: '',\n  selectedNetwork: '',\n  profile: {}\n}\n\n\nexport default function userReducer (state = initialState, action) {\n  switch (action.type) {\n    case SET_USER_ACCOUNT:\n      return {...state, selectedAddress: action.payload.address, selectedNetwork: action.payload.network}\n    case AUTHENTICATE_USER_SUCCESS:\n      console.log(action.payload);\n      return {...state, profile: action.payload.user}\n    default:\n      return state\n      \n  }\n}\n\n","import {CREATE_CAMPAIGN_WALLET, CREATE_CAMPAIGN_WALLET_SUCCESS, CREATE_CAMPAIGN_WALLET_FAILURE, GET_ACCOUNT_FLOW,\n  GET_ACCOUNT_FLOW_SUCCESS, GET_ACCOUNT_FLOW_FAILURE, GENERATE_FUNDS, GENERATE_FUNDS_SUCCESS, GENERATE_FUNDS_FAILURE,\n  SUBMIT_CAMPAIGN_DETAILS, SUBMIT_CAMPAIGN_DETAILS_SUCCESS, SUBMIT_CAMPAIGN_DETAILS_FAILURE\n} from '../actions/publisher';\n\nconst initialState = {\n  accounts: [],\n  currentAccount: '',\n  newAccountAdding: false,\n  generatingFunds: false, \n  currentPublisher: {},\n  campaignDetailsSubmitting: false\n}\n\n\nexport default function publisherReducer (state = initialState, action) {\n    let currentPublisherInState;\n  switch (action.type) {\n    case CREATE_CAMPAIGN_WALLET:\n      return {...state, newAccountAdding: true}\n    case CREATE_CAMPAIGN_WALLET_SUCCESS:\n      let newAccount = action.payload.account;\n      let currentAccounts = state.accounts;\n      currentAccounts.push({'address': newAccount});\n      return {...state, accounts: currentAccounts, newAccountAdding: false, currentAccount: newAccount}\n    case CREATE_CAMPAIGN_WALLET_FAILURE:\n      return {...state, newAccountAdding: false};\n    case GENERATE_FUNDS:\n      return {...state, generatingFunds: true}\n    case GENERATE_FUNDS_SUCCESS:\n      return {...state, generatingFunds: false}\n    case GENERATE_FUNDS_FAILURE:\n      return {...state, generatingFunds: false}\n    case GET_ACCOUNT_FLOW:\n      currentPublisherInState = state.currentPublisher;\n      currentPublisherInState.accountFlow = action.payload.data;\n      return {...state, currentPublisher: currentPublisherInState}\n    case SUBMIT_CAMPAIGN_DETAILS:\n      return {...state, campaignDetailsSubmitting: true}\n    case SUBMIT_CAMPAIGN_DETAILS_SUCCESS:\n      return {...state, campaignDetailsSubmitting: false}\n    default:\n\n      return state\n      \n  }\n}\n","import {FETCH_OPEN_CAMPAIGNS, FETCH_OPEN_CAMPAIGNS_SUCCESS, FETCH_OPEN_CAMPAIGNS_FAILURE, FETCH_CURRENT_CAMPAIGN, FETCH_CURRENT_CAMPAIGN_SUCCESS,\n  FETCH_CURRENT_CAMPAIGN_FAILURE, SUBMIT_JOIN_CAMPAIGN,SUBMIT_JOIN_CAMPAIGN_SUCCESS, SUBMIT_JOIN_CAMPAIGN_FAILURE, APPROVAL_PENDING,\n  APPROVAL_SUCCESS\n} from '../actions/campaign';\n\nconst initialState = {\n  campaignList: [],\n  currentCampaign: {},\n  joinCampaignSubmitting: false,\n  approvalPending: false\n}\n\nexport default function campaignReducer (state = initialState, action) {\n\n  switch (action.type) {\n    case FETCH_OPEN_CAMPAIGNS:\n      return {...state}\n    case FETCH_OPEN_CAMPAIGNS_SUCCESS:\n      return {...state, campaignList: action.payload.campaigns}\n    case FETCH_OPEN_CAMPAIGNS_FAILURE:\n      return {...state}\n    case FETCH_CURRENT_CAMPAIGN:\n      return {...state}\n    case FETCH_CURRENT_CAMPAIGN_SUCCESS:\n      return {...state, currentCampaign: action.payload.campaign}\n    case FETCH_CURRENT_CAMPAIGN_FAILURE:\n      return {...state}\n    case SUBMIT_JOIN_CAMPAIGN:\n      return {...state, joinCampaignSubmitting: true}\n    case SUBMIT_JOIN_CAMPAIGN_SUCCESS:\n      return {...state, joinCampaignSubmitting: false}\n    case SUBMIT_JOIN_CAMPAIGN_FAILURE:\n      return {...state, joinCampaignSubmitting: false}\n    case APPROVAL_PENDING:\n      return {...state, approvalPending: true}\n    case APPROVAL_SUCCESS:\n      return {...state, approvalPending: false}\n    default:\n      return state;\n  }      \n}\n      ","import { combineReducers } from 'redux';\nimport userReducer from './user';\nimport publisherReducer from './publisher';\nimport campaignReducer from './campaign';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  publisher: publisherReducer,\n  campaign: campaignReducer\n})\n\nexport default rootReducer","// Copyright 2018 Tokenplex LLC. https://tokenplex.io. proy24\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n// http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n// or implied. See the License for the specific language governing\n// permissions and limitations under the License.\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport promise from 'redux-promise';\nimport index from '../reducers';\n\n\nexport default function configureStore(initialState) {\n  const finalCreateStore = compose(\n    applyMiddleware(promise),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )(createStore);\n\n  const store = finalCreateStore(index, initialState);\n\n  if (module.hot) {\n    // Enable Webpack hot module replacement for reducers\n    module.hot.accept('../reducers', () => {\n      const nextReducer = require('../reducers');\n      store.replaceReducer(nextReducer);\n    });\n  }\n\n  return store;\n}","import axios from 'axios';\n\nexport const CREATE_PUBLISHER_INDEX = 'CREATE_PUBLISHER_INDEX';\nexport const CREATE_PUBLISHER_INDEX_SUCCESS = 'CREATE_PUBLISHER_INDEX_SUCCESS';\nexport const CREATE_PUBLISHER_INDEX_FAILURE = 'CREATE_PUBLISHER_INDEX_FAILURE';\n\n\nexport const CREATE_CAMPAIGN_WALLET = 'CREATE_CAMPAIGN_WALLET';\nexport const CREATE_CAMPAIGN_WALLET_SUCCESS = 'CREATE_CAMPAIGN_WALLET_SUCCESS';\nexport const CREATE_CAMPAIGN_WALLET_FAILURE = 'CREATE_CAMPAIGN_WALLET_FAILURE';\n\nexport const GENERATE_FUNDS = 'GENERATE_FUNDS';\nexport const GENERATE_FUNDS_SUCCESS = 'GENERATE_FUNDS_SUCCESS';\nexport const GENERATE_FUNDS_FAILURE = 'GENERATE_FUNDS_FAILURE';\n\nexport const GET_ACCOUNT_FLOW = 'GET_ACCOUNT_FLOW';\nexport const GET_ACCOUNT_FLOW_SUCCESS = 'GET_ACCOUNT_FLOW_SUCCESS';\nexport const GET_ACCOUNT_FLOW_FAILURE = 'GET_ACCOUNT_FLOW_FAILURE';\n\nexport const SUBMIT_CAMPAIGN_DETAILS = 'SUBMIT_CAMPAIGN_DETAILS';\nexport const SUBMIT_CAMPAIGN_DETAILS_SUCCESS = 'SUBMIT_CAMPAIGN_DETAILS_SUCCESS';\nexport const SUBMIT_CAMPAIGN_DETAILS_FAILURE = 'SUBMIT_CAMPAIGN_DETAILS_FAILURE';\n\nconst API_SERVER = process.env.REACT_APP_API_SERVER;\n\nexport function generateFunds(payload) {\n  const request = axios.post(`${API_SERVER}/generate_funds`, payload);  \n  return {\n    type: GENERATE_FUNDS,\n    payload: request\n  }\n}\n\nexport function generateFundsSuccess(response) {\n  return {\n    type: GENERATE_FUNDS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function generateFundsFailure(err) {\n  return {\n    type: GENERATE_FUNDS_FAILURE,\n    payload: err\n  }\n}\n\nexport function createPublisherIndex(payload) {\n  \n  const request = axios.post(`${API_SERVER}/publisher`, payload);\n  \n  return {\n    type: CREATE_PUBLISHER_INDEX,\n    payload: request\n  }\n}\n\nexport function createPublisherIndexSuccess(payload) {\n  return {\n    type: CREATE_PUBLISHER_INDEX_SUCCESS,\n    payload: payload\n  }\n}\n\nexport function createPublisherIndexFailure(err) {\n  return {\n    type: CREATE_PUBLISHER_INDEX_FAILURE,\n    payload: err\n  }\n}\n\nexport function createCampaignWallet(payload) {\n  const request = axios.post(`${API_SERVER}/publisher_wallet`, payload);\n  \n  return {\n    type: CREATE_CAMPAIGN_WALLET,\n    payload: request\n  }\n}\n\nexport function createCampaignWalletSuccess(response) {\n  return {\n    type: CREATE_CAMPAIGN_WALLET_SUCCESS,\n    payload: response\n  }\n}\n\nexport function createCampaignWalletFailure(err) {\n  return {\n    type: CREATE_CAMPAIGN_WALLET_FAILURE,\n    payload: err\n  }\n}\n\nexport function getAccountFlow(id) {\n  const request = axios.get(`${API_SERVER}/account_flow?id=${id}`)\n  return {\n    type: GET_ACCOUNT_FLOW,\n    payload: request\n  }\n}\n\nexport function getAccountFlowSuccess(response) {\n  return {\n    type: GET_ACCOUNT_FLOW_SUCCESS,\n    payload: response\n  }\n}\n\nexport function getAccountFlowFailure(err) {\n  return {\n    type: GET_ACCOUNT_FLOW_FAILURE,\n    payload: err\n  } \n}\n\nexport function submitCampaignDetails(payload) {\n  const request = axios.post(`${API_SERVER}/campaign_details`, payload);\n  return {\n    type: SUBMIT_CAMPAIGN_DETAILS,\n    payload: request\n  }\n}\n\nexport function submitCampaignDetailsSuccess(response) {\n  return {\n    type: SUBMIT_CAMPAIGN_DETAILS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function submitCampaignDetailsFailure(err) {\n  return {\n    type: SUBMIT_CAMPAIGN_DETAILS_SUCCESS,\n    payload: err\n  }\n}\n","import axios from 'axios';\nexport const FETCH_OPEN_CAMPAIGNS = 'FETCH_OPEN_CAMPAIGNS';\nexport const FETCH_OPEN_CAMPAIGNS_SUCCESS = 'FETCH_OPEN_CAMPAIGNS_SUCCESS';\nexport const FETCH_OPEN_CAMPAIGNS_FAILURE = 'FETCH_OPEN_CAMPAIGNS_FAILURE';\n\nexport const FETCH_CURRENT_CAMPAIGN = 'FETCH_CURRENT_CAMPAIGN';\nexport const FETCH_CURRENT_CAMPAIGN_SUCCESS = 'FETCH_CURRENT_CAMPAIGN_SUCCESS';\nexport const FETCH_CURRENT_CAMPAIGN_FAILURE = 'FETCH_CURRENT_CAMPAIGN_FAILURE';\n\nexport const SUBMIT_JOIN_CAMPAIGN = 'SUBMIT_JOIN_CAMPAIGN';\nexport const SUBMIT_JOIN_CAMPAIGN_SUCCESS = 'SUBMIT_JOIN_CAMPAIGN_SUCCESS';\nexport const SUBMIT_JOIN_CAMPAIGN_FAILURE = 'SUBMIT_JOIN_CAMPAIGN_FAILURE';\n\nexport const APPROVAL_SUCCESS = 'APPROVAL_SUCCESS';\nexport const APPROVAL_PENDING = 'APPROVAL_PENDING';\n\nconst API_SERVER = process.env.REACT_APP_API_SERVER;\n\n\nexport function fetchOpenCampaigns() {\n  const request = axios.get(`${API_SERVER}/campaigns`);\n  return {\n    type: FETCH_OPEN_CAMPAIGNS,\n    payload: request\n  }\n}\n\nexport function fetchOpenCampaignsSuccess(response) {\n  return {\n    type: FETCH_OPEN_CAMPAIGNS_SUCCESS,\n    payload: response\n  }\n}\n\nexport function fetchOpenCampaignsFailure(err) {\n  return {\n    type: FETCH_OPEN_CAMPAIGNS_FAILURE,\n    payload: err\n  }\n}\n\nexport function fetchCurrentCampaign(id) {\n  const request = axios.get(`${API_SERVER}/campaign?id=${id}`);\n  return {\n    type: FETCH_CURRENT_CAMPAIGN,\n    payload: request\n  }  \n}\n\nexport function fetchCurrentCampaignSuccess(response) {\n  return {\n    type: FETCH_CURRENT_CAMPAIGN_SUCCESS,\n    payload: response\n  }\n}\n\nexport function fetchCurrentCampaignFailure(err) {\n  return {\n    type: FETCH_CURRENT_CAMPAIGN_FAILURE,\n    payload: err\n  }\n}\n\nexport function submitJoinCampaign(payload) {\n  const request = axios.post(`${API_SERVER}/join_campaign`, payload);\n  return {\n    type: SUBMIT_JOIN_CAMPAIGN,\n    payload: request\n  }\n}\n\nexport function submitJoinCampaignSuccess(response) {\n  return {\n    type: SUBMIT_JOIN_CAMPAIGN_SUCCESS,\n    payload: response\n  }\n}\n\nexport function submitJoinCampaignFailure(err) {\n  return {\n    type: SUBMIT_JOIN_CAMPAIGN_FAILURE,\n    payload: err\n  }\n}\n\nexport function approvalPending() {\n  return {\n    type: APPROVAL_PENDING\n  }\n}\n\nexport function approvalSuccess() {\n  return {\n    type: APPROVAL_SUCCESS,\n  }\n}","import axios from 'axios';\nexport const SET_USER_ACCOUNT = 'SET_USER_ACCOUNT';\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const AUTHENTICATE_USER_SUCCESS = 'AUTHENTICATE_USER_SUCCESS';\nexport const AUTHENTICATE_USER_FAILURE = 'AUTHENTICATE_USER_FAILURE';\nconst API_SERVER = process.env.REACT_APP_API_SERVER;\n\n\nexport function setUserAccount(payload) {\n  return {\n    type: SET_USER_ACCOUNT,\n    payload: payload\n  }\n}\n\nexport function authenticateUser(payload) {\n  const request = axios.get(`${API_SERVER}/authenticate?address=${payload.address}`);\n  return {\n    type: AUTHENTICATE_USER,\n    payload: request\n  }\n}\n\nexport function authenticateUserSuccess(response) {\n  return {\n    type: AUTHENTICATE_USER_SUCCESS,\n    payload: response\n  }\n}\n\nexport function authenticateUserFailure(err) {\n  return {\n    type: AUTHENTICATE_USER_FAILURE,\n    payload: err\n  }\n}","module.exports = __webpack_public_path__ + \"static/media/w903.6e641cf3.png\";","module.exports = require('./configureStore.dev');","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}